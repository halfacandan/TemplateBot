const botCommandPrefix = "!"
const botHelpCommand = "help";
const botAboutCommand = "about";
const lineBreak = "\n\uFEFF";

const jwt = require('./modules/jwt.js');
const helpers = require('./modules/helpers.js');
const messages = require('./modules/messages.js');
const discord = require('discord.js');
const bot = new discord.Client();

// Define global variables
var botName;
var jwtPayload;
var jwtToken;

// Connect to the API
const api = require('./modules/api.js');

// Target a particular channel
//const targetChannelId = "774654841120620576";

// Define Bot Behaviours
bot.on('ready', () => {

    botName = bot.user.username;

    // Get the security token
    jwtPayload = {
        user: botName
    };
    jwtToken = jwt.GenerateToken(jwtPayload);

    bot.user.setStatus('online');
    bot.user.setActivity(`${botCommandPrefix}${botHelpCommand}`, { type: 'LISTENING' });

    console.log(`${botName} is online`);
});

bot.on('message', async message => {

    // Limit the bot commands to a particular channel
    //if(message.channel != targetChannelId) return;

    var discordUser = message.author.username;

    // Don't reply to messages generated by any bot
    if (message.author.bot) return;
    
    // Don't reply to messages generated by this bot
    if (discordUser === botName) return;

    // Parse the message
    let parsedMessage = await helpers.ParseMessage(message, botCommandPrefix);

    // Define the reply
    var data = null;
    var replies = Array();
    var reactions = null;
    var replyToPerson = true;

    if(parsedMessage.Command == null) return;

    switch (parsedMessage.Command) {
        case `${botCommandPrefix}${botAboutCommand}`:
            if(message.channel != null) message.channel.startTyping();

            replies.push(await messages.AboutThisBot());
            break;

        case `${botCommandPrefix}${botHelpCommand}`:
            if(message.channel != null) message.channel.startTyping();
                        
            botCommands = await messages.ListBotCommands(botAboutCommand, botCommandPrefix);

            let helpMessage = botCommands.sort().join("\n");
            replies.push(helpMessage);
            break;
    
        case `${botCommandPrefix}test`:
            if(message.channel != null) message.channel.startTyping();
        
            data = await api.ExampleApiCallWithAuth(jwtToken);
            if(data == null) {
                replies.push(messages.BotError());
                break;
            }

            replies.push(data.message);
            break;
        
        default:

            if(replies.length < 1){
                replies.push(messages.BotError());
            }
            
            break;
    }

    await messages.SendReplies(discord, bot, message, replies, reactions, replyToPerson);
});

// Login to Discord as the Bot
bot.login(process.env.BOT_TOKEN);